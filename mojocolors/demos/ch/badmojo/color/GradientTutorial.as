/*CREDITS * This Code is heavily influenced by the NodeBox Colors Library.  * See http://nodebox.net/code/index.php/Colors and http://nodebox.net *  * Ported and rewritten in 2009 by Philipp Laeubli and licensed under GPL.  * See LICENSE.txt for details. *  * Copyright (c) 2009 Tom De Smedt, Frederic De Bleser & Philipp Laeubli */package ch.badmojo.color {	import flash.display.Sprite;		/**	 * This tutorial shows you, how to use the color and the color wheel class 	 * to create a nice gradient from blue to red.	 * @author phil	 */	public class GradientTutorial extends Sprite {		public function GradientTutorial() {						//	create the first color object, a nice blue:			var blue : Color = new Color(16, 34, 43);						//	then the second color			var orange : Color = new Color(226, 240, 214);						//	you can now use the .gradient method on color to create a gradient. A			//	ColorWheel is created which stores all colors from blue to orange.			var gradient : ColorWheel = blue.gradientTo(orange);				// now we paint rectangles for each color in the wheel.			// you do not have to access a color in the colorwheel by an index. If 			// you use the ColorWheel in a loop, then getColor not only gives you 			// the current color, it also "rotates" the wheel to the next color. 			// When the wheel went through all colors, it starts at it's beginning.			for (var i : int = 0;i < gradient.length(); i++) {							// get the current color				var currentColor : Color = gradient.getColor();							// to get the hex values of the color, use getHex								this.graphics.beginFill(currentColor.getHex());				this.graphics.drawRect(i * 10, 0, 10, this.stage.stageHeight / 2);				this.graphics.endFill();			}										// when you create a ColorWheel with the gradientTo method, all			// colors are sorted. you can mix your ColorWheel by			// calling shuffle():			gradient.shuffle();			var theX : Number =  250;			for (var k : int = 0;k < gradient.length(); k++) {				// get the current color				currentColor = gradient.getColor();				//		draw the bars again with a offset.				this.graphics.beginFill(currentColor.getHex());				var random : Number = Math.random()*30;				this.graphics.drawRect(theX, 0, 5 +random, this.stage.stageHeight / 2);				this.graphics.endFill();				theX += random;			}		}	}}