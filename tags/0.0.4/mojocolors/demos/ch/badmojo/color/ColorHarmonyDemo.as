/* * This Code is heavily influenced by the NodeBox Colors Library.  * See http://nodebox.net/code/index.php/Colors and http://nodebox.net *  * Ported and rewritten in 2009 by Philipp Laeubli and licensed under GPL.  * See LICENSE.txt for details. *  * Copyright (c) 2009 Philipp Laeubli * Original NodeBox Colors Library: Tom De Smedt, Frederic De Bleser * */package  ch.badmojo.color {	import ch.badmojo.color.Color;	import ch.badmojo.color.ColorWheel;	import flash.display.Sprite;	import flash.display.StageAlign;			/**	 * This App demonstrates the use of the Color class.	 * @author phil	 */	public class ColorHarmonyDemo extends Sprite {		private var _currentWidth : Number = -150;		private var _currentHeight : Number = 0;		public function ColorHarmonyDemo() {			this.stage.align = StageAlign.TOP_LEFT;			var color : Color = new Color(21, 88, 188);						addSample(color.toComplementList().getColorSample("Complement"));			addSample(color.toComplementaryList().getColorSample("Complement List"));						addSample(color.toLeftComplementaryList().getColorSample("Left Complement List"));			addSample(color.toRightComplementaryList().getColorSample("Right Complement List"));			addSample(color.toSplitComplementList().getColorSample("Split Complement List"));			addSample(color.toMonochrome().getColorSample("Monochrome"));			addSample(color.toAnalogous().getColorSample("Analogous"));			addSample(color.toTriad().getColorSample("Triad"));			addSample(color.toTetrad().getColorSample("Tetrad"));									addSample(color.toCompound().getColorSample("Compound"));			addSample(color.toCompound(true).getColorSample("Flipped Compound"));		}		private function addSample(sample : Sprite) : void {			_currentWidth = _currentWidth + 150 + 10; 			sample.x = _currentWidth;			sample.y = _currentHeight;			addChild(sample);			if(150 + _currentWidth > 800) {				_currentHeight = _currentHeight + 150 + 10;				_currentWidth = -150;			}		}	}}