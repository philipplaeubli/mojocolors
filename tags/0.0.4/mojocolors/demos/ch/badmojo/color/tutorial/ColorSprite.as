/* * This Code is heavily influenced by the NodeBox Colors Library.  * See http://nodebox.net/code/index.php/Colors and http://nodebox.net *  * Ported and rewritten in 2009 by Philipp Laeubli and licensed under GPL.  * See LICENSE.txt for details. *  * Copyright (c) 2009 Philipp Laeubli * Original NodeBox Colors Library: Tom De Smedt, Frederic De Bleser * */package ch.badmojo.color.tutorial {	import flash.events.MouseEvent;		import flash.display.Sprite;		import ch.badmojo.color.Color;		/**	 * @author phil	 */	public class ColorSprite extends Sprite {		private var _color : Color;		public function ColorSprite(color : Color) {			// assign the color to a field.			_color = color;						// draw the shape			redraw(_color);						//  add the listeners.			addEventListener(MouseEvent.MOUSE_OVER, onOver);			addEventListener(MouseEvent.MOUSE_OUT, onOutOrUp);			addEventListener(MouseEvent.MOUSE_DOWN, onDown);			addEventListener(MouseEvent.MOUSE_UP, onUp);		}		private function onUp(event : MouseEvent) : void {			redraw(createOverColor());		}		private function onDown(event : MouseEvent) : void {			// When the user presses the button, we highlight the button with 			// the color in the right angle of the artistic color wheel.			redraw(_color.rybRotate(-90));		}		private function onOutOrUp(event : MouseEvent) : void {			redraw(_color);		}		private function onOver(event : MouseEvent) : void {			// redraw the shape. While the mouse is over this shape, we draw it a			// little brighter and more saturated.			redraw(createOverColor());		}		private function createOverColor() : Color {			// copy the color object, because we want to keep the original colors.			var c : Color = _color.copy();			// brighten it up and add more saturation.			c.brighten(20);			c.saturate(20);			return c;		}		private function redraw(color : Color) : void {			graphics.clear();			graphics.beginFill(color.getHex());			// the properties of the Color object can influence the size of the 			// ColorSprite. Darker ColorSprites are now bigger than brighter. 			graphics.drawRect(0, 0, 200, (Math.pow(100 - _color.getBrightness(), 2) / 100 ));			graphics.endFill();		}	}}