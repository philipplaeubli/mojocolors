#summary This tutorial shows how to use the gradientTo method.

= Gradients =
While ActionScript has tools that offer the creation of gradients, they are mostly limited to the scope of the {{{flash.display.Graphics}}} object.
Sometimes this is not enough, especially when creating multiple sprites or other interactive objects where the gradient should span across them.

mojocolors can help you. In this tutorial you will learn how to create a gradient and how you can easily loop through all the colors in the ColorWheel.

=== Step One - Create the Colors ===

{{{

//	create the first color object, a nice blue:
	var blue : Color = new Color(16, 34, 43);

//	then the second color
	var orange : Color = new Color(226, 240, 214);

}}}

=== Step Two - Create the Gradient ===

{{{			
//	you can now use the .gradient method on color to create a gradient. A
//	ColorWheel is created which stores all colors from blue to orange.
	var gradient : ColorWheel = blue.gradientTo(orange);

}}}

=== Step Three - The Loop ===

{{{
//      now we paint rectangles for each color in the wheel.
//      you do not have to access a color in the colorwheel by an index. If 
//      you use the ColorWheel in a loop, then getColor not only gives you 
//      the current color, it also "rotates" the wheel to the next color. 
//      When the wheel went through all colors, it starts at it's beginning.
	
        for (var i : int = 0;i < gradient.length(); i++) {
	
//              get the current color
	        var currentColor : Color = gradient.getColor();
			
//              to get the hex values of the color, use getHex				
          	this.graphics.beginFill(currentColor.getHex());
        	this.graphics.drawRect(i * 10, 0, 10, this.stage.stageHeight / 2);
        	this.graphics.endFill();
	}

}}}

=== The Result ===
http://farm4.static.flickr.com/3078/3206267732_4aba3de7af_o.jpg

=== More ===
{{{	
//              when you create a ColorWheel with the gradientTo method, all
//              colors are sorted. you can mix your ColorWheel by
//              calling shuffle():
		gradient.shuffle();
		var theX : Number =  250;
		for (var k : int = 0;k < gradient.length(); k++) {
	
//                      get the current color
			currentColor = gradient.getColor();

//	        	draw the bars again with a offset.
			this.graphics.beginFill(currentColor.getHex());
			var random : Number = Math.random()*30;
			this.graphics.drawRect(theX, 0, 5 +random, this.stage.stageHeight / 2);
			this.graphics.endFill();
			theX += random;
		}
}}}
http://farm4.static.flickr.com/3115/3205430793_de067cf6b4_o.jpg