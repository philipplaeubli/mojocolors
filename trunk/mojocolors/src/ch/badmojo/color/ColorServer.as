/* * This Code is heavily influenced by the NodeBox Colors Library.  * See http://nodebox.net/code/index.php/Colors and http://nodebox.net *  * Ported and rewritten in 2009 by Philipp Laeubli and licensed under GPL.  * See LICENSE.txt for details. *  * Copyright (c) 2009 Philipp Laeubli * Original NodeBox Colors Library: Tom De Smedt, Frederic De Bleser * */package ch.badmojo.color {	import flash.events.Event;		import flash.net.URLRequest;		import flash.net.URLLoader;		/**	 * @author phil	 */	public class ColorServer {		private var _request : URLRequest;		private var _callback : Function;		public static function getFromKuler(name : String, apiKey : String) : Array {			return null;		}		public static function getColorWheel(keyword : String, apiKey : String = "NATIVE") : ColorWheel {			return null;		}		public static function getAllColors(callback : Function, apiKey : String = "NATIVE"):void  {			var server : ColorServer = new ColorServer(callback);			server.loadAll();		}		public static function getFromFlickr(name : String, apiKey : String) : Array {			return null;		}		public function ColorServer(callback : Function) {			_callback = callback;		}		private function loadAll() : void {			var loader : URLLoader = new URLLoader();			_request = new URLRequest("http://mojocolors.appspot.com/colors/all");			loader.addEventListener(Event.COMPLETE, onXmlLoaded);			loader.load(_request);		}		private function onXmlLoaded(event : Event) : void {			var xml : XML = XML(event.currentTarget.data);			var xmlColors : XMLList = xml.color;			var wheel : ColorWheel = new ColorWheel();			for each (var color : XML in xmlColors) {				var red : Number = Number(color.red.text());				var green : Number = Number(color.green.text());;				var blue : Number = Number(color.blue.text());;				var c : Color = new Color(red,green,blue);				wheel.addColor(c);			}			_callback.call(this, wheel);			}	}}